name: Automatic CipherOS Builder

on:
  push:
    branches:
      - main

jobs:
  test-and-build:
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest]
        arch: [x64, arm64, x32]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install urllib3 progressbar3 colorama requests
      
      - name: Run Compilation Script
        shell: bash
        run: |
          OUTPUT_DIR="installers/${{ matrix.os }}/${{ matrix.arch }}"
          mkdir -p "$OUTPUT_DIR"
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "Compiling for Linux (${RUNNER_ARCH})..."
            pyinstaller installer.py --distpath "$OUTPUT_DIR" --onefile --icon="./icon.ico" --name="linux-${{ matrix.arch }}-installer"
            chmod +x installers/${{ matrix.os }}/${{ matrix.arch }}/linux-${{ matrix.arch }}-installer
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "Compiling for macOS (${RUNNER_ARCH})..."
            pyinstaller installer.py --distpath "$OUTPUT_DIR" --onefile --icon="./icon.ico" --name="macos-${{ matrix.arch }}-installer"
            chmod +x installers/${{ matrix.os }}/${{ matrix.arch }}/macos-${{ matrix.arch }}-installer
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.os }}-${{ matrix.arch }}-build"
          path: "installers/${{ matrix.os }}/${{ matrix.arch }}"